"use client";

import { useState, useEffect } from "react";
import { motion } from "framer-motion";
import { Download, Share2, Heart, Pill, User, Clock, Stethoscope, Apple, Bed } from "lucide-react";
import { useRouter } from "next/navigation";

interface HealthReport {
  id: number;
  date: string;
  age: string;
  gender: string;
  temperature: string;
  duration: string;
  symptoms: string;
  allergies: string;
  medications: string;
  result: string;
}

export default function ResultsPage() {
  const router = useRouter();
  const [report, setReport] = useState<HealthReport | null>(null);
  const [parsedResult, setParsedResult] = useState({
    diagnosis: "",
    medicines: "",
    avoid: "",
    advice: ""
  });

  useEffect(() => {
    // Get the latest report from localStorage
    const savedReports = JSON.parse(localStorage.getItem('healthReports') || '[]');
    if (savedReports.length > 0) {
      setReport(savedReports[0]);
      
      // Parse the AI result
      const resultText = savedReports[0].result;
      parseAIResult(resultText);
    }
  }, []);

  const parseAIResult = (text: string) => {
    // Parse the AI result into structured data
    const lines = text.split('\n').filter(line => line.trim() !== '');
    
    let diagnosis = "";
    let medicines = "";
    let avoid = "";
    let advice = "";
    
    for (const line of lines) {
      if (line.includes("Diagnosis:")) {
        diagnosis = line.replace("Diagnosis:", "").trim();
      } else if (line.includes("Common Medicines:")) {
        medicines = line.replace("Common Medicines:", "").trim();
      } else if (line.includes("Foods to Avoid:") || line.includes("Avoid:")) {
        avoid = line.replace("Foods to Avoid:", "").replace("Avoid:", "").trim();
      } else if (line.includes("Doctor Visit Advice:") || line.includes("Advice:")) {
        advice = line.replace("Doctor Visit Advice:", "").replace("Advice:", "").trim();
      }
    }
    
    setParsedResult({
      diagnosis,
      medicines,
      avoid,
      advice
    });
  };

  const downloadPDF = () => {
    if (!report) return;
    
    // Create a simple text-based report
    const reportText = `
⚕️ DoctorAI Health Report
========================

Patient Information:
- Name: Patient
- Date: ${new Date().toLocaleDateString()}
- Age: ${report.age} years
- Gender: ${report.gender}
- Temperature: ${report.temperature}°F
- Duration: ${report.duration}
- Symptoms: ${report.symptoms}

AI Analysis:
🧠 Diagnosis: ${parsedResult.diagnosis}
💊 Common Medicines: ${parsedResult.medicines}
🚫 Foods to Avoid: ${parsedResult.avoid}
🕒 Doctor Visit Advice: ${parsedResult.advice}

Generated by DoctorAI - Gemini-Powered Health Assistant
This is AI-generated advice. Consult a healthcare professional for serious conditions.
    `;
    
    // Create a blob and download
    const blob = new Blob([reportText], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'doctorai-health-report.txt';
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  const cardVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: { opacity: 1, y: 0, transition: { duration: 0.3 } }
  };

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1
      }
    }
  };

  if (!report) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-green-50 py-12 px-4 sm:px-6 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4"></div>
          <p className="text-gray-600">Loading your health report...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-green-50 py-12 px-4 sm:px-6">
      <div className="max-w-4xl mx-auto">
        <motion.div
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          className="text-center mb-10"
        >
          <h1 className="text-4xl font-bold text-gray-900 mb-3 flex items-center justify-center">
            <Stethoscope className="text-blue-500 mr-3" />
            💊 Your Health Insight
          </h1>
          <p className="text-lg text-gray-600">
            Your personalized health analysis
          </p>
        </motion.div>

        <motion.div
          variants={containerVariants}
          initial="hidden"
          animate="visible"
          className="space-y-6"
        >
          {/* Patient Info Card */}
          <motion.div
            variants={cardVariants}
            className="bg-white rounded-2xl shadow-lg p-6"
          >
            <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
              <div>
                <h2 className="text-xl font-bold text-gray-900 flex items-center">
                  <User className="mr-2 text-blue-500" />
                  Patient Information
                </h2>
                <p className="text-gray-500 text-sm mt-1">{new Date(report.date).toLocaleDateString()}</p>
              </div>
              <div className="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-medium">
                AI Analysis Complete
              </div>
            </div>
            
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mt-6">
              <div className="border-l-4 border-blue-500 pl-3 py-1">
                <p className="text-sm text-gray-500">Age</p>
                <p className="font-medium">{report.age} years</p>
              </div>
              <div className="border-l-4 border-green-500 pl-3 py-1">
                <p className="text-sm text-gray-500">Gender</p>
                <p className="font-medium capitalize">{report.gender}</p>
              </div>
              <div className="border-l-4 border-orange-500 pl-3 py-1">
                <p className="text-sm text-gray-500">Temperature</p>
                <p className="font-medium">{report.temperature}°F</p>
              </div>
              <div className="border-l-4 border-purple-500 pl-3 py-1">
                <p className="text-sm text-gray-500">Duration</p>
                <p className="font-medium">{report.duration}</p>
              </div>
            </div>
            
            <div className="mt-4 pt-4 border-t border-gray-100">
              <p className="text-sm text-gray-500">Symptoms</p>
              <p className="font-medium">{report.symptoms}</p>
            </div>
            
            {report.allergies && (
              <div className="mt-2 pt-2 border-t border-gray-100">
                <p className="text-sm text-gray-500">Allergies</p>
                <p className="font-medium">{report.allergies}</p>
              </div>
            )}
            
            {report.medications && (
              <div className="mt-2">
                <p className="text-sm text-gray-500">Current Medications</p>
                <p className="font-medium">{report.medications}</p>
              </div>
            )}
          </motion.div>

          {/* Diagnosis Card */}
          <motion.div
            variants={cardVariants}
            className="bg-white rounded-2xl shadow-lg p-6"
          >
            <h2 className="text-xl font-bold text-gray-900 flex items-center">
              <Heart className="mr-2 text-red-500" />
              Diagnosis
            </h2>
            <div className="mt-4 p-4 bg-blue-50 rounded-lg">
              <p className="text-gray-800">🧠 {parsedResult.diagnosis || "Analyzing your symptoms..."}</p>
            </div>
          </motion.div>

          {/* Medicines Card */}
          <motion.div
            variants={cardVariants}
            className="bg-white rounded-2xl shadow-lg p-6"
          >
            <h2 className="text-xl font-bold text-gray-900 flex items-center">
              <Pill className="mr-2 text-green-500" />
              Common Medicines
            </h2>
            <div className="mt-4 p-4 bg-green-50 rounded-lg">
              <p className="text-gray-800">💊 {parsedResult.medicines || "Generating recommendations..."}</p>
            </div>
          </motion.div>

          {/* Foods to Avoid Card */}
          <motion.div
            variants={cardVariants}
            className="bg-white rounded-2xl shadow-lg p-6"
          >
            <h2 className="text-xl font-bold text-gray-900 flex items-center">
              <Apple className="mr-2 text-red-500" />
              Foods to Avoid
            </h2>
            <div className="mt-4 p-4 bg-red-50 rounded-lg">
              <p className="text-gray-800">🚫 {parsedResult.avoid || "Analyzing dietary restrictions..."}</p>
            </div>
          </motion.div>

          {/* Advice Card */}
          <motion.div
            variants={cardVariants}
            className="bg-white rounded-2xl shadow-lg p-6"
          >
            <h2 className="text-xl font-bold text-gray-900 flex items-center">
              <Bed className="mr-2 text-blue-500" />
              Doctor Visit Advice
            </h2>
            <div className="mt-4 p-4 bg-blue-50 rounded-lg">
              <p className="text-gray-800">🕒 {parsedResult.advice || "Generating care advice..."}</p>
            </div>
          </motion.div>
        </motion.div>

        {/* Action Buttons */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.6 }}
          className="mt-10 flex flex-col sm:flex-row gap-4 justify-center"
        >
          <motion.button
            whileHover={{ scale: 1.02 }}
            whileTap={{ scale: 0.98 }}
            onClick={downloadPDF}
            className="flex items-center justify-center gradient-button"
          >
            <Download className="mr-2 h-5 w-5" />
            Download Report (TXT)
          </motion.button>
          
          <motion.button
            whileHover={{ scale: 1.02 }}
            whileTap={{ scale: 0.98 }}
            className="flex items-center justify-center bg-white border-2 border-blue-500 text-blue-600 py-3 px-6 rounded-lg font-semibold shadow hover:shadow-lg transition"
          >
            <Share2 className="mr-2 h-5 w-5" />
            Share Result
          </motion.button>
          
          <motion.button
            whileHover={{ scale: 1.02 }}
            whileTap={{ scale: 0.98 }}
            onClick={() => router.push("/health-form")}
            className="flex items-center justify-center bg-white border-2 border-gray-300 text-gray-700 py-3 px-6 rounded-lg font-semibold shadow hover:shadow-lg transition"
          >
            New Checkup
          </motion.button>
        </motion.div>

        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ delay: 0.8 }}
          className="mt-12 text-center text-sm text-gray-500"
        >
          ⚕️ DoctorAI provides general health information only. Not a substitute for professional medical advice.
        </motion.div>
      </div>
    </div>
  );
}